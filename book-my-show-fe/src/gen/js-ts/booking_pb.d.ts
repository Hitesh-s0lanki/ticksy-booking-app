// @generated by protoc-gen-es v1.10.1
// @generated from file booking.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Booking status
 *
 * @generated from enum BookingStatus
 */
export declare enum BookingStatus {
  /**
   * @generated from enum value: BOOKING_STATUS_UNSPECIFIED = 0;
   */
  BOOKING_STATUS_UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: CANCEL = 2;
   */
  CANCEL = 2,

  /**
   * @generated from enum value: NONACTIVE = 3;
   */
  NONACTIVE = 3,
}

/**
 * Razorpay success payload echoed back to server
 *
 * @generated from message RazorpaySuccessResponse
 */
export declare class RazorpaySuccessResponse extends Message<RazorpaySuccessResponse> {
  /**
   * @generated from field: string razorpay_payment_id = 1;
   */
  razorpayPaymentId: string;

  /**
   * @generated from field: string razorpay_order_id = 2;
   */
  razorpayOrderId: string;

  /**
   * @generated from field: string razorpay_signature = 3;
   */
  razorpaySignature: string;

  constructor(data?: PartialMessage<RazorpaySuccessResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "RazorpaySuccessResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RazorpaySuccessResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RazorpaySuccessResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RazorpaySuccessResponse;

  static equals(a: RazorpaySuccessResponse | PlainMessage<RazorpaySuccessResponse> | undefined, b: RazorpaySuccessResponse | PlainMessage<RazorpaySuccessResponse> | undefined): boolean;
}

/**
 * Canonical Booking entity (snapshot at time of booking)
 *
 * @generated from message Booking
 */
export declare class Booking extends Message<Booking> {
  /**
   * Primary identifiers
   *
   * UUID
   *
   * @generated from field: string booking_id = 1;
   */
  bookingId: string;

  /**
   * UUID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * Either movie_id or event_id may be empty; enforce in service layer
   *
   * UUID (optional)
   *
   * @generated from field: string movie_id = 3;
   */
  movieId: string;

  /**
   * UUID (optional)
   *
   * @generated from field: string event_id = 4;
   */
  eventId: string;

  /**
   * Showtime & seats
   *
   * @generated from field: string showtime_id = 5;
   */
  showtimeId: string;

  /**
   * e.g., ["A1","A2"]
   *
   * @generated from field: repeated string seats = 6;
   */
  seats: string[];

  /**
   * derived from seats
   *
   * @generated from field: int32 seats_count = 7;
   */
  seatsCount: number;

  /**
   * Prices as strings to avoid float rounding issues, e.g. "499.00"
   *
   * @generated from field: string amount_without_gst = 8;
   */
  amountWithoutGst: string;

  /**
   * @generated from field: string gst = 9;
   */
  gst: string;

  /**
   * @generated from field: string total_amount = 10;
   */
  totalAmount: string;

  /**
   * Render artifacts
   *
   * @generated from field: string pdf_url = 11;
   */
  pdfUrl: string;

  /**
   * @generated from field: string qr_url = 12;
   */
  qrUrl: string;

  /**
   * Lifecycle
   *
   * @generated from field: BookingStatus status = 13;
   */
  status: BookingStatus;

  /**
   * ISO-8601 string, e.g. "2025-09-17T22:41"
   *
   * @generated from field: string booked_at = 14;
   */
  bookedAt: string;

  /**
   * ISO-8601 string (optional snapshot)
   *
   * @generated from field: string show_datetime = 15;
   */
  showDatetime: string;

  /**
   * Payment proof (optional after create)
   *
   * @generated from field: RazorpaySuccessResponse razorpay = 16;
   */
  razorpay?: RazorpaySuccessResponse;

  constructor(data?: PartialMessage<Booking>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "Booking";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Booking;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Booking;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Booking;

  static equals(a: Booking | PlainMessage<Booking> | undefined, b: Booking | PlainMessage<Booking> | undefined): boolean;
}

/**
 * Create booking (from frontend payload)
 *
 * @generated from message CreateBookingRequest
 */
export declare class CreateBookingRequest extends Message<CreateBookingRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * optional
   *
   * @generated from field: string movie_id = 2;
   */
  movieId: string;

  /**
   * optional
   *
   * @generated from field: string event_id = 3;
   */
  eventId: string;

  /**
   * @generated from field: string showtime_id = 4;
   */
  showtimeId: string;

  /**
   * @generated from field: repeated string seats = 5;
   */
  seats: string[];

  /**
   * @generated from field: string amount_without_gst = 6;
   */
  amountWithoutGst: string;

  /**
   * @generated from field: string gst = 7;
   */
  gst: string;

  /**
   * @generated from field: string total_amount = 8;
   */
  totalAmount: string;

  /**
   * optional (can be generated post-create)
   *
   * @generated from field: string pdf_url = 9;
   */
  pdfUrl: string;

  /**
   * optional (can be generated post-create)
   *
   * @generated from field: string qr_url = 10;
   */
  qrUrl: string;

  /**
   * pass success payload after verify
   *
   * @generated from field: RazorpaySuccessResponse razorpay = 11;
   */
  razorpay?: RazorpaySuccessResponse;

  constructor(data?: PartialMessage<CreateBookingRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "CreateBookingRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateBookingRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateBookingRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateBookingRequest;

  static equals(a: CreateBookingRequest | PlainMessage<CreateBookingRequest> | undefined, b: CreateBookingRequest | PlainMessage<CreateBookingRequest> | undefined): boolean;
}

/**
 * @generated from message CreateBookingResponse
 */
export declare class CreateBookingResponse extends Message<CreateBookingResponse> {
  /**
   * @generated from field: Booking booking = 1;
   */
  booking?: Booking;

  constructor(data?: PartialMessage<CreateBookingResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "CreateBookingResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateBookingResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateBookingResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateBookingResponse;

  static equals(a: CreateBookingResponse | PlainMessage<CreateBookingResponse> | undefined, b: CreateBookingResponse | PlainMessage<CreateBookingResponse> | undefined): boolean;
}

/**
 * @generated from message GetBookingRequest
 */
export declare class GetBookingRequest extends Message<GetBookingRequest> {
  /**
   * @generated from field: string booking_id = 1;
   */
  bookingId: string;

  constructor(data?: PartialMessage<GetBookingRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "GetBookingRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBookingRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBookingRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBookingRequest;

  static equals(a: GetBookingRequest | PlainMessage<GetBookingRequest> | undefined, b: GetBookingRequest | PlainMessage<GetBookingRequest> | undefined): boolean;
}

/**
 * @generated from message GetBookingResponse
 */
export declare class GetBookingResponse extends Message<GetBookingResponse> {
  /**
   * @generated from field: Booking booking = 1;
   */
  booking?: Booking;

  constructor(data?: PartialMessage<GetBookingResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "GetBookingResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBookingResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBookingResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBookingResponse;

  static equals(a: GetBookingResponse | PlainMessage<GetBookingResponse> | undefined, b: GetBookingResponse | PlainMessage<GetBookingResponse> | undefined): boolean;
}

/**
 * @generated from message ListBookingsRequest
 */
export declare class ListBookingsRequest extends Message<ListBookingsRequest> {
  /**
   * filter by user
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * optional
   *
   * @generated from field: int32 page_number = 2;
   */
  pageNumber: number;

  /**
   * optional
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  constructor(data?: PartialMessage<ListBookingsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ListBookingsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListBookingsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListBookingsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListBookingsRequest;

  static equals(a: ListBookingsRequest | PlainMessage<ListBookingsRequest> | undefined, b: ListBookingsRequest | PlainMessage<ListBookingsRequest> | undefined): boolean;
}

/**
 * @generated from message ListBookingsResponse
 */
export declare class ListBookingsResponse extends Message<ListBookingsResponse> {
  /**
   * @generated from field: repeated Booking bookings = 1;
   */
  bookings: Booking[];

  /**
   * total count for pagination
   *
   * @generated from field: int32 total = 2;
   */
  total: number;

  constructor(data?: PartialMessage<ListBookingsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ListBookingsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListBookingsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListBookingsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListBookingsResponse;

  static equals(a: ListBookingsResponse | PlainMessage<ListBookingsResponse> | undefined, b: ListBookingsResponse | PlainMessage<ListBookingsResponse> | undefined): boolean;
}

/**
 * Update only the status (e.g., CANCEL)
 *
 * @generated from message UpdateBookingStatusRequest
 */
export declare class UpdateBookingStatusRequest extends Message<UpdateBookingStatusRequest> {
  /**
   * @generated from field: string booking_id = 1;
   */
  bookingId: string;

  /**
   * ACTIVE | CANCEL | NONACTIVE
   *
   * @generated from field: BookingStatus status = 2;
   */
  status: BookingStatus;

  /**
   * optional
   *
   * @generated from field: string reason = 3;
   */
  reason: string;

  constructor(data?: PartialMessage<UpdateBookingStatusRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "UpdateBookingStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateBookingStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateBookingStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateBookingStatusRequest;

  static equals(a: UpdateBookingStatusRequest | PlainMessage<UpdateBookingStatusRequest> | undefined, b: UpdateBookingStatusRequest | PlainMessage<UpdateBookingStatusRequest> | undefined): boolean;
}

/**
 * @generated from message UpdateBookingStatusResponse
 */
export declare class UpdateBookingStatusResponse extends Message<UpdateBookingStatusResponse> {
  /**
   * @generated from field: Booking booking = 1;
   */
  booking?: Booking;

  constructor(data?: PartialMessage<UpdateBookingStatusResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "UpdateBookingStatusResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateBookingStatusResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateBookingStatusResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateBookingStatusResponse;

  static equals(a: UpdateBookingStatusResponse | PlainMessage<UpdateBookingStatusResponse> | undefined, b: UpdateBookingStatusResponse | PlainMessage<UpdateBookingStatusResponse> | undefined): boolean;
}

/**
 * Single booking details
 *
 * @generated from message MyBooking
 */
export declare class MyBooking extends Message<MyBooking> {
  /**
   * movie / event
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * movie or event title
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * e.g. 2025-09-20
   *
   * @generated from field: string date = 3;
   */
  date: string;

  /**
   * e.g. 22:30
   *
   * @generated from field: string time = 4;
   */
  time: string;

  /**
   * venue name
   *
   * @generated from field: string venue = 5;
   */
  venue: string;

  /**
   * Google Maps URL
   *
   * @generated from field: string venueUrl = 6;
   */
  venueUrl: string;

  /**
   * list of seat codes
   *
   * @generated from field: repeated string seats = 7;
   */
  seats: string[];

  /**
   * total amount
   *
   * @generated from field: double amount = 8;
   */
  amount: number;

  /**
   * QR code image URL/base64
   *
   * @generated from field: string qr = 9;
   */
  qr: string;

  /**
   * PDF ticket URL
   *
   * @generated from field: string pdf = 10;
   */
  pdf: string;

  /**
   * UUID or unique booking id
   *
   * @generated from field: string bookingId = 11;
   */
  bookingId: string;

  /**
   * movie/event poster image
   *
   * @generated from field: string image = 12;
   */
  image: string;

  constructor(data?: PartialMessage<MyBooking>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "MyBooking";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MyBooking;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MyBooking;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MyBooking;

  static equals(a: MyBooking | PlainMessage<MyBooking> | undefined, b: MyBooking | PlainMessage<MyBooking> | undefined): boolean;
}

/**
 * Wrapper for multiple bookings
 *
 * @generated from message MyBookings
 */
export declare class MyBookings extends Message<MyBookings> {
  /**
   * @generated from field: repeated MyBooking items = 1;
   */
  items: MyBooking[];

  constructor(data?: PartialMessage<MyBookings>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "MyBookings";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MyBookings;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MyBookings;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MyBookings;

  static equals(a: MyBookings | PlainMessage<MyBookings> | undefined, b: MyBookings | PlainMessage<MyBookings> | undefined): boolean;
}

