// @generated by protoc-gen-es v1.10.1
// @generated from file movie.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message MovieSuccessResponse
 */
export declare class MovieSuccessResponse extends Message<MovieSuccessResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: int32 status = 2;
   */
  status: number;

  /**
   * @generated from field: string movieId = 3;
   */
  movieId: string;

  constructor(data?: PartialMessage<MovieSuccessResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "MovieSuccessResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MovieSuccessResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MovieSuccessResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MovieSuccessResponse;

  static equals(a: MovieSuccessResponse | PlainMessage<MovieSuccessResponse> | undefined, b: MovieSuccessResponse | PlainMessage<MovieSuccessResponse> | undefined): boolean;
}

/**
 * @generated from message AllMoviesResponse
 */
export declare class AllMoviesResponse extends Message<AllMoviesResponse> {
  /**
   * @generated from field: repeated Movie movies = 3;
   */
  movies: Movie[];

  constructor(data?: PartialMessage<AllMoviesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "AllMoviesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllMoviesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllMoviesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllMoviesResponse;

  static equals(a: AllMoviesResponse | PlainMessage<AllMoviesResponse> | undefined, b: AllMoviesResponse | PlainMessage<AllMoviesResponse> | undefined): boolean;
}

/**
 * @generated from message Movie
 */
export declare class Movie extends Message<Movie> {
  /**
   * @generated from field: string movieId = 1;
   */
  movieId: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: repeated string genre = 4;
   */
  genre: string[];

  /**
   * @generated from field: int32 durationMins = 5;
   */
  durationMins: number;

  /**
   * @generated from field: string releaseDate = 6;
   */
  releaseDate: string;

  /**
   * @generated from field: double rating = 7;
   */
  rating: number;

  /**
   * @generated from field: repeated string languages = 8;
   */
  languages: string[];

  /**
   * @generated from field: string imageKey = 9;
   */
  imageKey: string;

  /**
   * @generated from field: string posterKey = 10;
   */
  posterKey: string;

  constructor(data?: PartialMessage<Movie>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "Movie";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Movie;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Movie;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Movie;

  static equals(a: Movie | PlainMessage<Movie> | undefined, b: Movie | PlainMessage<Movie> | undefined): boolean;
}

/**
 * @generated from message MovieInput
 */
export declare class MovieInput extends Message<MovieInput> {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: repeated string genre = 3;
   */
  genre: string[];

  /**
   * @generated from field: int32 durationMins = 4;
   */
  durationMins: number;

  /**
   * @generated from field: string releaseDate = 5;
   */
  releaseDate: string;

  /**
   * @generated from field: double rating = 6;
   */
  rating: number;

  /**
   * @generated from field: repeated string languages = 7;
   */
  languages: string[];

  /**
   * @generated from field: string imageKey = 8;
   */
  imageKey: string;

  /**
   * @generated from field: string posterKey = 9;
   */
  posterKey: string;

  constructor(data?: PartialMessage<MovieInput>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "MovieInput";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MovieInput;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MovieInput;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MovieInput;

  static equals(a: MovieInput | PlainMessage<MovieInput> | undefined, b: MovieInput | PlainMessage<MovieInput> | undefined): boolean;
}

/**
 * @generated from message MoviesList
 */
export declare class MoviesList extends Message<MoviesList> {
  /**
   * @generated from field: repeated Movie movies = 1;
   */
  movies: Movie[];

  constructor(data?: PartialMessage<MoviesList>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "MoviesList";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MoviesList;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MoviesList;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MoviesList;

  static equals(a: MoviesList | PlainMessage<MoviesList> | undefined, b: MoviesList | PlainMessage<MoviesList> | undefined): boolean;
}

