// @generated by protoc-gen-es v1.10.1
// @generated from file event.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message Event
 */
export declare class Event extends Message<Event> {
  /**
   * @generated from field: string eventId = 1;
   */
  eventId: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: string eventType = 4;
   */
  eventType: string;

  /**
   * @generated from field: string categoryType = 5;
   */
  categoryType: string;

  /**
   * @generated from field: string organizerName = 6;
   */
  organizerName: string;

  /**
   * @generated from field: string startDate = 7;
   */
  startDate: string;

  /**
   * @generated from field: string endDate = 8;
   */
  endDate: string;

  /**
   * @generated from field: string bannerUrl = 9;
   */
  bannerUrl: string;

  constructor(data?: PartialMessage<Event>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "Event";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Event;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Event;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Event;

  static equals(a: Event | PlainMessage<Event> | undefined, b: Event | PlainMessage<Event> | undefined): boolean;
}

/**
 * @generated from message EventInput
 */
export declare class EventInput extends Message<EventInput> {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: string eventType = 3;
   */
  eventType: string;

  /**
   * @generated from field: string categoryType = 4;
   */
  categoryType: string;

  /**
   * @generated from field: string organizerName = 5;
   */
  organizerName: string;

  /**
   * @generated from field: string startDate = 6;
   */
  startDate: string;

  /**
   * @generated from field: string endDate = 7;
   */
  endDate: string;

  /**
   * @generated from field: string bannerUrl = 8;
   */
  bannerUrl: string;

  constructor(data?: PartialMessage<EventInput>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "EventInput";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventInput;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventInput;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventInput;

  static equals(a: EventInput | PlainMessage<EventInput> | undefined, b: EventInput | PlainMessage<EventInput> | undefined): boolean;
}

/**
 * @generated from message EventsList
 */
export declare class EventsList extends Message<EventsList> {
  /**
   * @generated from field: repeated Event events = 1;
   */
  events: Event[];

  constructor(data?: PartialMessage<EventsList>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "EventsList";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventsList;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventsList;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventsList;

  static equals(a: EventsList | PlainMessage<EventsList> | undefined, b: EventsList | PlainMessage<EventsList> | undefined): boolean;
}

